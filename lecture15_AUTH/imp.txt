Auth
  |-> Authentication -> login, sign up (password -> hashing)
  |-> Authorization -> if the current user has a required access of a functionality or process

  
Authentication -> bcrypt -> to encrypt a string -> hashing -> converting a "string" word to another by adding buffers(random characters), so that guessing or decoding original value of "string" is nearly impossible

Authorization -> 
 - to segregate users on the basis of, (authorized user, role based access, premium based access)

ways for Authorization:- 
 - JWT (json web token) -> include both client and server
 - express-session -> includ server
 - Cookies -> temporary storage for sever and client
 - passport -> provide google auth -> only server side -> 3rd party application


JWT:- token based authorizationn
  1. generate token for a logged in user
  2. user sends the token everytime it sends a request to backen(server)
  3. server will validate the token 
